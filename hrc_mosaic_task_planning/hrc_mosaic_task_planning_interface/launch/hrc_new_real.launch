<?xml version="1.0"?>

<launch>

  <arg name="group_name_robot" default="ur5_on_guide"/>
  <arg name="group_name_human" default="human_right_arm"/>

  <arg name="platinum" default="false"/>
  <arg name="hrc" default="false"/>
  <arg name="starting_recipe" default="0"/>

  <param name="starting_recipe_number" value="$(arg starting_recipe)"/>

  <arg name="recipe" value="$(find hrc_mosaic_task_planning_interface)/plans/comparison_for_review_tcybernetics/recipe_proposed_method_3x3.yaml" />
  <param name="recipe" value="$(arg recipe)" />

  <arg name="recipe_name" default="recipe" />
  <param name="recipe_name" value="$(arg recipe_name)" />

  <!-- If recipe_path is set, all the recipes in folder "recipe_path" are executed (only if platinum=false, see below) -->

  <param name="autosync" value="false" />

  <arg name="robot_node" value="robot_task_interface" />
  <arg name="human_node" value="human_task_interface" />

  <arg name="prefix" value="/sharework/test/stiima" />
  <arg name="robot_request_from_planner" value="$(arg prefix)/motion" />
  <arg name="human_request_from_planner" value="$(arg prefix)/human" />
  <arg name="robot_feedback_to_planner" value="$(arg prefix)/motion/feedback" />
  <arg name="human_feedback_to_planner" value="$(arg prefix)/human/feedback" />

  <param name="prefix" value="$(arg prefix)" />

  <!-- LOAD PARAMETERS ABOUT AGENTS -->
  <rosparam if="$(arg hrc)" command="load" file="$(find hrc_mosaic_task_planning_interface)/config/multiple_agents.yaml" />
  <rosparam unless="$(arg hrc)"  command="load" file="$(find hrc_mosaic_task_planning_interface)/config/single_agents.yaml" />

<!--    DISPATCHERS NODE IF PLATINUM IS FALSE -->
  <group unless="$(arg platinum)">
    <node unless="$(arg hrc)" name="task_planner_dispatcher" pkg="task_planner_dispatcher" type="dispatcher_single" output="screen" >
      <param name="topic_request_from_planner" value="$(arg robot_request_from_planner)" />
      <param name="topic_feedback_to_planner" value="$(arg robot_feedback_to_planner)" />
      <param name="plan_name" value="robot_plan" />
      <param name="reset" value="false" />
    </node>
    <node if="$(arg hrc)" name="task_planner_dispatcher" pkg="task_planner_dispatcher" type="dispatcher_double_async" output="screen" >
      <param name="robot_request_from_planner" value="$(arg robot_request_from_planner)" />
      <param name="robot_feedback_to_planner" value="$(arg robot_feedback_to_planner)" />
      <param name="human_request_from_planner" value="$(arg human_request_from_planner)" />
      <param name="human_feedback_to_planner" value="$(arg human_feedback_to_planner)" />
    </node>
  </group>

  <node if="$(arg hrc)" name="syncronization_node" pkg="task_planner_interface" type="syncronization_node"  output="screen" >
    <param name="number_of_agents" value="2"/>
  </node>

<!-- TASK PLANNER INTERFACE NODE-->
  <node name="task_planner_interface" pkg="task_planner_interface" type="taskServiceManager.py"  output="screen"/>

<!-- AGENTS NODES -->
  <include file="$(find hrc_mosaic_task_planning_interface)/launch/hrc_fake_single_agent.launch" >
      <arg name="group_name" value="ur5_on_guide" />
      <arg name="agent_node" value="robot_task_executor" />
      <arg name="home_position" value="ur5_home"/>
      <arg name="retry_position" value="ur5_away"/>
      <arg name="topic_request_from_planner" value="$(arg robot_request_from_planner)"/>
      <arg name="go_home_after_execution" value="false"/>
  </include>

  <!-- REMAPPING TOPIC -->
  <!--
    <remap from="/from_topic" to="/hmi/task_execution_request"/>
    <remap from="/from_topic" to="/hmi/task_execution_result"/>
  -->

  <include if="$(arg hrc)" file="$(find hrc_mosaic_task_planning_interface)/launch/hrc_real_human.launch" >
      <arg name="agent_node" value="human_task_executor" />
      <arg name="topic_request_from_planner" value="$(arg human_request_from_planner)"/>
  </include>


<!-- DB UPDATE NODE -->
<include file="$(find hrc_mosaic_task_planning_interface)/launch/mongo_handler.launch" />




</launch>
