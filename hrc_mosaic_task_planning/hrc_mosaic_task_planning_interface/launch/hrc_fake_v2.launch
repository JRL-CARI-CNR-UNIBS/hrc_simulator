<?xml version="1.0"?>

<launch>

  <arg name="group_name_robot" default="ur5_on_guide"/>
  <arg name="group_name_human" default="human_right_arm"/>

  <arg name="platinum" default="false"/>
  <arg name="hrc" default="false"/>
  <arg name="starting_recipe" default="0"/>

  <arg name="mongo_database" default="test_mosaic"/>
  <arg name="mongo_collection_tasks" default="tasks_properties"/>
  <arg name="mongo_collection_results" default="tasks_results"/>

  <param name="starting_recipe_number" value="$(arg starting_recipe)"/>

  <!-- <arg name="recipe" value="$(find hrc_mosaic_task_planning_interface)/plans/comparison_for_review_tcybernetics/recipe_baseline_mosaic_full.yaml" /> -->
  <arg name="recipe" value="$(find hrc_mosaic_task_planning_interface)/plans/comparison_for_review_tcybernetics/recipe_proposed_method_3x3.yaml" />
  <param name="recipe" value="$(arg recipe)" />

  <arg name="recipe_name" default="recipe" />
  <param name="recipe_name" value="$(arg recipe_name)" />

  <!-- If recipe_path is set, all the recipes in folder "recipe_path" are executed (only if platinum=false, see below) -->

  <param name="mongo_database" value="$(arg mongo_database)"/>
  <param name="mongo_collection_tasks" value="$(arg mongo_collection_tasks)"/>
  <param name="mongo_collection_results" value="$(arg mongo_collection_results)"/>

  <!--<arg name="recipe_path" default="$(find task_planner_interface)/plans/multi-obj/v4/" />
  <param name="recipe_path" value="$(arg recipe_path)" /> -->

  <param name="autosync" value="false" />
  <param name="go_home_after_execution" value="false" />

  <arg name="robot_node" value="robot_task_interface" />


  <arg name="robot_request_from_planner" value="/sharework/test/stiima/motion" />
  <arg name="human_request_from_planner" value="/sharework/test/stiima/human" />
  <arg name="robot_feedback_to_planner" value="/sharework/test/stiima/motion/feedback" />
  <arg name="human_feedback_to_planner" value="/sharework/test/stiima/human/feedback" />

  <!-- Load parameter about agents involved -->
  <rosparam if="$(arg hrc)" command="load" file="$(find hrc_simulator_configurations)/config/multiple_agents.yaml" />
  <rosparam unless="$(arg hrc)"  command="load" file="$(find hrc_simulator_configurations)/config/single_agents.yaml" />
  <!--  -->

  <node name="$(arg robot_node)" pkg="task_planner_interface" type="robot_node"  output="screen" launch-prefix="gdb -ex run --args">
    <param name="topic_request_from_planner" value="$(arg robot_request_from_planner)" />
    <param name="topic_feedback_to_planner" value="$(arg robot_feedback_to_planner)" />
    <param name="group_name" value="$(arg group_name_robot)" />
    <param name="home_position" value="ur5_home" />
    <param name="retry_position" value="ur5_away" />
  </node>


<!-- DB UPDATE NODE -->
  <arg name="db_name" default="sharework"/>
  <arg name="coll_properties_name" default="hrc_task_properties"/>
  <arg name="coll_results_name" default="results_test"/>
  <arg name="coll_risk_name" default="hrc_dynamic_risks"/>
  <arg name="coll_duration_name" default="hrc_task_durations"/>

  <node name="mongo_handler" pkg="task_planner_interface" type="mongoHandler.py"  output="screen" >
    <param name="db_name" type="string" value="$(arg db_name)"/>
    <param name="coll_properties_name" type="string" value="$(arg coll_properties_name)"/>
    <param name="coll_results_name" type="string" value="$(arg coll_results_name)"/>
    <param name="coll_risk_name" type="string" value="$(arg coll_risk_name)"/>
    <param name="coll_duration_name" type="string" value="$(arg coll_duration_name)"/>
  </node>




</launch>
